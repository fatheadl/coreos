version: "3"
services:
  influxdb:
    image: influxdb:2.6.1
    container_name: influxdb
    environment:
      - TZ=${TIMEZONE}
      - INFLUXD_REPORTING_DISABLED=true
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD} # set in .env
      - DOCKER_INFLUXDB_INIT_ORG=ensom
      - DOCKER_INFLUXDB_INIT_BUCKET=solar
    privileged: true
    security_opt:
      - label=disable      

    ports:
      - 8086:8086
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.32
    volumes:
      - /var/homelab/influxdb2/data:/var/lib/influxdb2:z
      - /var/homelab/influxdb2/config:/etc/influxdb2
    restart:
      unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.influxdb.loadbalancer.server.port=8086
      - traefik.http.routers.influxdb.rule=Host(`in.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.influxdb.entrypoints=websecure
      - traefik.http.routers.influxdb.tls.certresolver=le
      - traefik.docker.network=homelab_fatheadl-net
      #- traefik.http.routers.influxdb.middlewares=my-GeoBlock@file,simpleAuth@file
      
  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    environment:
      - TZ=${TIMEZONE}
      - GF_SERVER_DOMAIN=${PUBLIC_DOMAIN}
    privileged: true
    user: '1000'
    security_opt:
      - label=disable
    ports:
      - 3000:3000
    volumes:
      - /var/homelab/grafana-data:/var/lib/grafana:z
      #- /var/homelab/grafana:/etc/grafana      
    restart:
      unless-stopped
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.33
    labels:
      - traefik.enable=true
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - traefik.http.routers.grafana.rule=Host(`graf.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls.certresolver=le
      - traefik.docker.network=core_fatheadl-net
      #- traefik.http.routers.grafana.middlewares=my-GeoBlock@file,simpleAuth@file
      
  loki:
    image: grafana/loki:2.7.5
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.43

  promtail:
    image: grafana/promtail:2.7.5
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.42      
      
  telegraf:
    image: telegraf:1.26.0
    container_name: telegraf
    links:
      - influxdb
    security_opt:
      - label=disable      
    volumes:
      - /var/homelab/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    restart: unless-stopped
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.41
    environment:
      - TZ=${TIMEZONE}
     
      
  node-red:
    depends_on:
       - broker
    container_name: node-red
    image: nodered/node-red:3.0.2
    environment:
    #      - SET_CONTAINER_TIMEZONE=true
    #      - CONTAINER_TIMEZONE=${TIMEZONE}
      - TZ=${TIMEZONE}
    volumes:
      - /var/homelab/node-red:/data:z
    privileged: true
    user: '1000'    
    security_opt:
      - label=disable
    restart: unless-stopped
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.34
    ports:
      - "1880:1880"

    labels:
      - traefik.enable=true
      - traefik.http.services.node-red.loadbalancer.server.port=1880
      - traefik.http.routers.node-red.rule=Host(`nr.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.node-red.entrypoints=websecure
      - traefik.http.routers.node-red.tls.certresolver=le
      - traefik.docker.network=core_fatheadl-net
      #- traefik.http.routers.node-red.middlewares=my-GeoBlock@file,simpleAuth@file
      
  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: unless-stopped
    image: koenkk/zigbee2mqtt:1.30.3
    volumes:
      - /var/homelab/zigbee2mqtt-data:/app/data:z
      - /run/udev:/run/udev:ro
    ports:
      - 8880:8080
    privileged: true
    security_opt:
      - label=disable      
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.35
    environment:
      - TZ=${TIMEZONE}
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_API="false"      
      #-  ZIGBEE2MQTT_DATA=/data
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_DISCOVERY_TOPIC=homeassistant
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_LEGACY_ENTITY_ATTRIBUTES="false"
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_LEGACY_TRIGGERS="true"
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_STATUS_TOPIC=homeassistant/status
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_LAST_SEEN="ISO_8601_local"
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_AVAILABILITY_PAYLOAD="false"
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_CHANNEL="15"
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_TRANSMIT_POWER="9"
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_PAN_ID="GENERATE"
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_NETWORK_KEY="GENERATE"
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL=info
      #-  ZIGBEE2MQTT_CONFIG_AVAILABILITY_ACTIVE_TIMEOUT=60
      #-  ZIGBEE2MQTT_CONFIG_AVAILABILITY_PASSIVE_TIMEOUT=2000
      #-  ZIGBEE2MQTT_CONFIG_AVAILABILITY="true"
      #-  ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_LEGACY="false"
      #-  ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_RETAIN="true"
      #-  ZIGBEE2MQTT_CONFIG_EXPERIMENTAL_NEW_API="true"
      #-  ZIGBEE2MQTT_CONFIG_FRONTEND_URL="https://z2m.${PUBLIC_DOMAIN}"
      #-  ZIGBEE2MQTT_CONFIG_FRONTEND_PORT="8880"
      #-  ZIGBEE2MQTT_CONFIG_HOMEASSISTANT="true"
      #-  ZIGBEE2MQTT_CONFIG_MQTT_INCLUDE_DEVICE_INFORMATION="true"
      #-  ZIGBEE2MQTT_CONFIG_MQTT_KEEPALIVE=60
      #-  ZIGBEE2MQTT_CONFIG_MQTT_REJECT_UNAUTHORIZED="true"
      #-  ZIGBEE2MQTT_CONFIG_MQTT_SERVER="mqtt://172.16.255.36:1883"
      #-  ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC="zigbee2mqtt"
      #-  ZIGBEE2MQTT_CONFIG_MQTT_VERSION=5
      #-  ZIGBEE2MQTT_CONFIG_SERIAL_PORT="tcp://172.16.255.80:6638"
      #-  ZIGBEE2MQTT_CONFIG_SERIAL_PORT_ADAPTER="ezsp"
      #-  ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_OUTPUT='["console"]'
      #-  ZIGBEE2MQTT_CONFIG_DEVICES=devices.yaml
      #-  ZIGBEE2MQTT_CONFIG_GROUPS=groups.yaml      
      
#    devices:
#      - /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_32671b6053c8eb11a8f8c5c3de5b81b4-if00-port0:/dev/ttyUSB0
    labels:
      - traefik.enable=true
      - traefik.http.services.zigbee2mqtt.loadbalancer.server.port=8080
      - traefik.http.routers.zigbee2mqtt.rule=Host(`z2m.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.zigbee2mqtt.entrypoints=websecure
      - traefik.http.routers.zigbee2mqtt.tls.certresolver=le
      - traefik.docker.network=core_fatheadl-net
      #- traefik.http.routers.zigbee2mqtt.middlewares=my-GeoBlock@file,simpleAuth@file
      
  broker:
    container_name: mqtt
    image: eclipse-mosquitto:2.0.15
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - /var/homelab/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf:z
      - /var/homelab/mosquitto/log:/mosquitto/log:z
      - /var/homelab/mosquitto/data:/mosquitto/data:z
    restart: unless-stopped
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.36
    ports:
      - "1883:1883"
      - "9001:9001"
    privileged: true
    security_opt:
      - label=disable      
      
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:2023.3.6
    environment:
      - TZ=${TIMEZONE}
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.37
    ports:
      - "8123:8123"
    privileged: true
    security_opt:
      - label=disable      
    volumes:
      - /var/homelab/homeassistant:/config:z
#      - /etc/localtime:/etc/localtime:ro
#      - /etc/letsencrypt:/etc/letsencrypt:ro
#    devices:
            #      - /dev/ttyACM0:/dev/ttyACM0:rwm
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8123"]
      interval: 30s
      timeout: 10s
      retries: 6

    labels:
      - traefik.enable=true
      - traefik.http.services.homeassistant.loadbalancer.server.port=8123
      - traefik.http.routers.homeassistant.rule=Host(`ha.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.homeassistant.entrypoints=websecure
      - traefik.http.routers.homeassistant.tls.certresolver=le
      - traefik.docker.network=core_fatheadl-net
      #- traefik.http.routers.homeassistant.middlewares=my-GeoBlock@file,simpleAuth@file
      
  homebridge:
    image: ghcr.io/oznu/homebridge:ubuntu@sha256:defcd3b5b89d86ed44abe6d6b6d9e0393df1479da164c1ba88f0762586e81c54
    container_name: homebridge
    environment:
      - TZ=${TIMEZONE}
      - PGID=1000
      - PUID=1000
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
    volumes:
      - /var/homelab/homebridge:/homebridge:z
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.38
    ports:
      - 8080:8080
      - 8181:8181
      - 51826:51826
    privileged: true
    security_opt:
      - label=disable      
    restart: unless-stopped
#    network_mode: host
    labels:
      - traefik.enable=true
      - traefik.http.services.homebridge.loadbalancer.server.port=8581
      - traefik.http.routers.homebridge.rule=Host(`hb.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.homebridge.entrypoints=websecure
      - traefik.http.routers.homebridge.tls.certresolver=le
      - traefik.docker.network=core_fatheadl-net
      #- traefik.http.routers.homebridge.middlewares=my-GeoBlock@file,simpleAuth@file
      
  gitea:
    image: gitea/gitea:1.19.0
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - TZ=${TIMEZONE}      
    restart: unless-stopped
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.39
    volumes:
      - /var/homelab/gitea:/data:z
#      - /etc/timezone:/etc/timezone:ro
#      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3030:3000"
      - "222:22"
    privileged: true
    security_opt:
      - label=disable      
    labels:
      - traefik.enable=true
      - traefik.http.services.gitea.loadbalancer.server.port=3000
      - traefik.http.routers.gitea.rule=Host(`gitea.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.gitea.entrypoints=websecure
      - traefik.http.routers.gitea.tls.certresolver=le
      - traefik.docker.network=core_fatheadl-net
      - traefik.http.routers.gitea.middlewares=my-GeoBlock@file,simpleAuth@file
      
  tasmobackup:
    ports:
      - '8259:80'
    privileged: true
    security_opt:
      - label=disable      
    volumes:
      - /var/homelab/tasmobackup/data:/var/www/html/data:z
    networks:
      core_fatheadl-net:
        ipv4_address: ${PRIVATE_NETWORK}.40      
    environment:
      # MYSQL env's are not needed if you are using sqlite
      #- MYSQL_SERVER=IPADDRESS
      #- MYSQL_USERNAME=USERNAME
      #- MYSQL_PASSWORD=PASSWORD
      # change below to mysql if you don't want to use sqlite
      # you will need to have a mysql server (set above) with a blank database already created.
      - DBTYPE=sqlite
      # if using Mysql remove the data/ from the below line
      # if using Sqlite the data/ is required!
      - TZ=America/Jamaica
      - DBNAME=data/tasmobackup
    container_name: TasmoBackup
    image: 'danmed/tasmobackupv1'
    restart: unless-stopped
    labels:
       - traefik.enable=true
       - traefik.http.services.tasmobackup.loadbalancer.server.port=80
       - traefik.http.routers.tasmobackup.rule=Host(`tb.argohome.duckdns.org`)
       - traefik.http.routers.tasmobackup.entrypoints=websecure
       - traefik.http.routers.tasmobackup.tls.certresolver=le      
      
      
      
networks:
  core_fatheadl-net:
    external: true
